'use server';

/**
 * @fileOverview Generates an initial task list based on a user prompt.
 *
 * - generateInitialTaskList - A function that generates an initial task list.
 * - GenerateInitialTaskListInput - The input type for the generateInitialTaskList function.
 * - GenerateInitialTaskListOutput - The return type for the generateInitialTaskList function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateInitialTaskListInputSchema = z.object({
  prompt: z.string().describe('A prompt describing the type of tasks to generate.'),
});
export type GenerateInitialTaskListInput = z.infer<typeof GenerateInitialTaskListInputSchema>;

const GenerateInitialTaskListOutputSchema = z.object({
  tasks: z.array(z.string()).describe('A list of tasks generated by the AI.'),
});
export type GenerateInitialTaskListOutput = z.infer<typeof GenerateInitialTaskListOutputSchema>;

export async function generateInitialTaskList(
  input: GenerateInitialTaskListInput
): Promise<GenerateInitialTaskListOutput> {
  return generateInitialTaskListFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateInitialTaskListPrompt',
  input: {schema: GenerateInitialTaskListInputSchema},
  output: {schema: GenerateInitialTaskListOutputSchema},
  prompt: `You are a helpful AI assistant that generates a list of common tasks based on a user prompt.

  The tasks should be specific and actionable.

  Generate a list of tasks based on the following prompt: {{{prompt}}}`,
});

const generateInitialTaskListFlow = ai.defineFlow(
  {
    name: 'generateInitialTaskListFlow',
    inputSchema: GenerateInitialTaskListInputSchema,
    outputSchema: GenerateInitialTaskListOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
