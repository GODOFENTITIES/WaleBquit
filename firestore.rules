/**
 * @file Overview
 * This ruleset enforces a strict user-ownership model, ensuring that users can only access their own data.
 *
 * @dataStructure
 * - /users/{userId}: Stores user profile information.
 * - /users/{userId}/sessions/{sessionId}: Stores chat sessions for each user.
 *
 * @keySecurityDecisions
 * - Users can only read and write their own user profile data.
 * - Users can only read and write their own chat sessions.
 * - Listing all users is disallowed for privacy.
 * - Data validation is relaxed in this prototyping phase to accelerate development.
 *
 * @denormalizationForAuthorization
 * - Chat sessions contain a `userId` field, which is validated against the parent path to enforce ownership.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) User with ID 'user123' can create their own profile.
     * @allow (get) User with ID 'user123' can read their own profile.
     * @deny (create) User with ID 'user456' cannot create a profile for 'user123'.
     * @deny (update) User with ID 'user456' cannot update the profile for 'user123'.
     * @deny (delete) User with ID 'user456' cannot delete the profile for 'user123'.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false; // Listing all users is not permitted.
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to chat session documents within a user's profile.
     * @path /users/{userId}/sessions/{sessionId}
     * @allow (create) User 'user123' can create a session under their profile.
     * @allow (get) User 'user123' can read a session under their profile.
     * @deny (create) User 'user456' cannot create a session under 'user123''s profile.
     * @deny (update) User 'user456' cannot update a session under 'user123''s profile.
     * @deny (delete) User 'user456' cannot delete a session under 'user123''s profile.
     * @principle Enforces document ownership for all operations, inheriting ownership from the parent user document.
     */
    match /users/{userId}/sessions/{sessionId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.userId == userId;
      allow update: if isExistingOwner(userId) && resource.data.userId == userId;
      allow delete: if isExistingOwner(userId);
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }
  }
}